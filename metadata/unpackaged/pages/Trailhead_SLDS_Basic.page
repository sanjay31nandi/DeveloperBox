<apex:page showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">

<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
<head>
  <meta charset="utf-8" />
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <title>Salesforce Lightning Design System Trailhead Module</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Import the Design System style sheet -->
  <apex:slds />
</head>
<body>

  <!-- REQUIRED SLDS WRAPPER -->
  <div class="slds-scope">

      <div class="myapp1">

  <!-- CREATE NEW ACCOUNT -->
  <div aria-labelledby="newaccountform">

    <!-- CREATE NEW ACCOUNT FORM -->
    <form class="slds-form--stacked" id="add-account-form">
      <!-- BOXED AREA -->
      <fieldset class="slds-box slds-theme--default slds-container--small">

        <legend id="newaccountform" class="slds-text-heading--medium slds-p-vertical--medium">Add a new account</legend>

        <div class="slds-form-element">
          <label class="slds-form-element__label" for="account-name">Name</label>
          <div class="slds-form-element__control">
            <input id="account-name" class="slds-input" type="text" placeholder="New account"/>
          </div>
        </div>
        <button class="slds-button slds-button--brand slds-m-top--medium" type="submit">Create Account</button>
      </fieldset>
      <!-- / BOXED AREA -->
    </form>
    <!-- CREATE NEW ACCOUNT FORM -->

  </div>
  <!-- / CREATE NEW ACCOUNT -->
    </div>
      
      
      
      
    <!-- MASTHEAD -->
    <p class="slds-text-heading--label slds-m-bottom--small">
      Salesforce Lightning Design System Trailhead Module
    </p>
    <!-- / MASTHEAD -->

    <!-- PRIMARY CONTENT WRAPPER -->
    <div class="myapp">

      <!-- SECTION - BADGE COMPONENTS -->
      <section aria-labelledby="badges">
        <h2 id="badges" class="slds-text-heading--large slds-m-vertical--large">Badges</h2>
        <div>
          <span class="slds-badge">Badge</span>
          <span class="slds-badge slds-theme--inverse">Badge</span>
        </div>
      </section>
      <!-- / SECTION - BADGE COMPONENTS -->

    </div>
    <!-- / PRIMARY CONTENT WRAPPER -->
 sanjay nandi is here
       <c:camping ></c:camping>
      
      <table class="slds-table slds-table--bordered slds-table--cell-buffer slds-no-row-hover">
  <thead>
    <tr class="slds-text-heading--label">
      <th scope="col">Account ID</th>
      <th scope="col">Account name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">123</th>
      <td>Account 1</td>
    </tr>
    <tr>
      <th scope="row">456</th>
      <td>Account 2</td>
    </tr>
  </tbody>
</table>
  

    
<apex:remoteObjects >
	    <apex:remoteObjectModel name="Account" fields="Name"/>
	</apex:remoteObjects>
<apex:remoteObjects >
  <apex:remoteObjectModel name="Contact" fields="Id,FirstName,lastName,LastModifiedDate,CreatedDate"/>
</apex:remoteObjects>
  
      <!-- different Section-->
      Different section
      
      <!-- PRIMARY CONTENT WRAPPER -->
<div class="myapp">

  <!-- ACCOUNT LIST TABLE -->
  <div id="account-list" class="slds-p-vertical--medium"></div>
  <!-- / ACCOUNT LIST TABLE -->

</div>
<!-- / PRIMARY CONTENT WRAPPER -->
      
      
      
</div>
  <!-- / REQUIRED SLDS WRAPPER -->    
    
 <!-- JAVASCRIPT -->
<script>
  (function() {
    var contact = new SObjectModel.Contact();
    var account = new SObjectModel.Account();
    var outputDiv = document.getElementById('account-list');
    var accountForm = document.getElementById('add-account-form');
    var accountNameField = document.getElementById('account-name');
    var sanjay = function() {
      contact.retrieve(
        { orderby: [{ CreatedDate: 'DESC' }], limit: 5 },
        function(error, records) {
          if (error) {
            alert(error.message);
          } else {
            // create data table
            var dataTable = document.createElement('table');
            dataTable.className = 'slds-table slds-table--bordered slds-table--cell-buffer slds-no-row-hover';

            // add header row
            var tableHeader = dataTable.createTHead();
            var tableHeaderRow = tableHeader.insertRow();

            var tableHeaderRowCell1 = tableHeaderRow.insertCell(0);
            tableHeaderRowCell1.appendChild(document.createTextNode('Contact First Name'));
            tableHeaderRowCell1.setAttribute('scope', 'col');
            tableHeaderRowCell1.setAttribute('class', 'slds-text-heading--label');

            var tableHeaderRowCell2 = tableHeaderRow.insertCell(1);
            tableHeaderRowCell2.appendChild(document.createTextNode('contact ID'));
            tableHeaderRowCell2.setAttribute('scope', 'col');
            tableHeaderRowCell2.setAttribute('class', 'slds-text-heading--label');
              var tableHeaderRowCell3 = tableHeaderRow.insertCell(2);
            tableHeaderRowCell3.appendChild(document.createTextNode('contact Last Name'));
            tableHeaderRowCell3.setAttribute('scope', 'col');
            tableHeaderRowCell3.setAttribute('class', 'slds-text-heading--label');
              var tableHeaderRowCell4 = tableHeaderRow.insertCell(3);
            tableHeaderRowCell4.appendChild(document.createTextNode('contact First Name'));
            tableHeaderRowCell4.setAttribute('scope', 'col');
            tableHeaderRowCell4.setAttribute('class', 'slds-text-heading--label');

            // build table body
            var tableBody = dataTable.appendChild(document.createElement('tbody'))
            var dataRow, dataRowCell1, dataRowCell2, recordName, recordId;
            records.forEach(function(record) {
              dataRow = tableBody.insertRow();

              dataRowCell1 = dataRow.insertCell(0);
              recordName = document.createTextNode(record.get('FirstName'));
              dataRowCell1.appendChild(recordName);

              dataRowCell2 = dataRow.insertCell(1);
              recordId = document.createTextNode(record.get('Id'));
              dataRowCell2.appendChild(recordId);
                
                dataRowCell2 = dataRow.insertCell(2);
              recordId = document.createTextNode(record.get('LastName'));
              dataRowCell2.appendChild(recordId);
                
                dataRowCell2 = dataRow.insertCell(3);
              recordId = document.createTextNode(record.get('CreatedDate'));
              dataRowCell2.appendChild(recordId);
                
                
            });

            if (outputDiv.firstChild) {
              // replace table if it already exists
              // see later in tutorial
              outputDiv.replaceChild(dataTable, outputDiv.firstChild);
            } else {
              outputDiv.appendChild(dataTable);
            }
          }
        }
      );
    }
    sanjay();
      


var createAccount = function() {  
  account.create({ Name: accountNameField.value }, function(error, records) {
    if (error) {
      alert(error.message);
    } else {
      sanjay();
      accountNameField.value = '';
    }
  });
}
accountForm.addEventListener('submit', function(e) {
  e.preventDefault();
  createAccount();
});
  })();
    
    
    

</script>
<!-- / JAVASCRIPT -->
    
    New section <br/>
    
    <!-- PRIMARY CONTENT WRAPPER -->

</body>
</html>
   
</apex:page>